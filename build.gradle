plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version "${moddevgradle_version}"
    id 'com.matthewprenger.cursegradle' version '[1.4,1.5)'
    id 'com.modrinth.minotaur' version '[2,3)'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = "${minecraft_version}-${mod_version}-neoforge"
group = mod_group

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    runs {
        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()
            systemProperty 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            server()
            systemProperty 'forge.enabledGameTestNamespaces', mod_id
            programArgument '--nogui'
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath(), '--existing', file('src/generated/resources/').getAbsolutePath()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    exclude '.cache/'
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {

}

repositories {
    maven { url = "https://maven.blamejared.com" }
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_version            : mod_version,
            mod_license            : mod_license,
            mod_url                : mod_url,
            mod_update             : mod_update,
            mod_tracker            : mod_tracker,
            mod_credits            : mod_credits,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}
sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.compilerArgs << "-Xmaxerrs" << "9000"
}

tasks.register('sourceJar', Jar) {
    dependsOn 'classes'
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

compileJava {
    options.incremental = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            artifact project.jar
            artifact project.sourceJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/The-Aether-Team/Cumulus"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

curseforge {
    project {
        apiKey = System.getenv("CURSEFORGE_TOKEN")
        id = "${curseforge_id}"
        releaseType = "${version_type}"
        changelog = file("$rootDir/docs/CHANGELOG.md")
        changelogType = "markdown"
        addGameVersion("${minecraft_version}")
        addGameVersion("NeoForge")
        mainArtifact(tasks.jar) {
            displayName = "${mod_name} - ${version}"
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "${modrinth_id}"
    versionNumber = "${version}"
    versionType = "${version_type}"
    versionName = "${mod_name} - ${version}"
    changelog = new File("$rootDir/docs/CHANGELOG.md").text
    uploadFile = tasks.jar
    gameVersions = ["${minecraft_version}"]
    loaders = ["neoforge"]
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}